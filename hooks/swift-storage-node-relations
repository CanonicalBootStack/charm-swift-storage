#!/bin/bash
# test
set -eu

CHARM_DIR=$(dirname $0)
ARG0=${0##*/}

if [[ -e $CHARM_DIR/swift-storage-node-common ]] ; then
  . $CHARM_DIR/swift-storage-node-common
else
  echo "ERROR: Could not load swift-storage-node-common from $CHARM_DIR"
fi

function install_hook {
  apt-get -y --force-yes install python-software-properties || exit 1

  configure_install_source "$OPENSTACK_ORIGIN"
  apt-get update

  DEBIAN_FRONTEND=noninteractive apt-get -y \
    install --no-install-recommends $PACKAGES || exit 1

  [[ ! -d /etc/swift ]] && mkdir /etc/swift
  chown swift:swift /etc/swift
  configure_rsyncd
  swift-init all stop || true
  setup_storage
  for i in account container object ; do
    port=$(config-get ${i}-server-port)
    create_server_conf $i "$port"
  done
}

function proxy_joined {
  local devs=$(determine_block_devs)
  local reldevices=""
  for dev in $devs ; do
    local srvnodename=$(basename $dev)
    if [[ -n "$reldevices" ]] ; then
      reldevices="$reldevices:$srvnodename"
    else
      reldevices="$srvnodename"
    fi
  done
  relation-set zone="$(config-get zone)" \
               device="$reldevices" \
               object_port="$(config-get object-server-port)" \
               container_port="$(config-get container-server-port)" \
               account_port="$(config-get account-server-port)"
}

function proxy_changed {
  local www_dir=`relation-get www_dir`
  local swift_hash=`relation-get swift_hash`
  [[ -z $www_dir ]] || [[ -z $swift_hash ]] && exit 0

  set_swift_hash $swift_hash
  local url="http://$(relation-get private-address)/$www_dir"
  for i in account object container ; do
    echo "Fetching $www_dir/$i.ring.gz"
    wget "$url/$i.ring.gz" -O /etc/swift/$i.ring.gz
  done
  set_swift_hash $swift_hash
  chown swift -R /etc/swift
  swift-init all start || true
}

case $ARG0 in
  "install") install_hook ;;
  "start"|"stop") exit 0 ;;
  "swift-proxy-relation-joined") proxy_joined ;;
  "swift-proxy-relation-changed") proxy_changed ;;
esac
